version: 2.1

references:
  images:
    go: &GOLANG_IMAGE cimg/go:1.14
    ci_machine: &CI_MACHINE_IMAGE ubuntu-1604:201903-01

  paths:
    test-results: &TEST_RESULTS_DIR bin

  environment: &ENVIRONMENT
    TEST_RESULTS_DIR: *TEST_RESULTS_DIR
    BUILD_IMAGE: *GOLANG_IMAGE

  filters: &FILTERS
    branches:
      only:
        - /^release-.*/
        - qa

  filters-checks: &FILTERS_CHECK
    branches:
      only:
        - master
        - /^release-.*/
        - qa
        - /^pull\/.*$/

executors:
  jams-manager-executor:
    machine:
      image: *CI_MACHINE_IMAGE
    working_directory: ~/workspace

  jams-executor:
    docker:
      - image: *GOLANG_IMAGE
        user: root
    working_directory: ~/workspace


jobs:
  test:
    executor: jams-manager-executor
    environment:
      <<: *ENVIRONMENT
    steps:

      - checkout

      - run:
          name: Running test
          command: |
            mkdir -p $TEST_RESULTS_DIR
            docker-compose -f docker-compose-ci.yml run server

      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR
      - run:
          name: codecov upload
          when: always
          command: bash <(curl -s https://codecov.io/bash)

  build:
    executor: jams-executor
    branches:
    steps:
      - checkout
      - run:
          name: Running build
          command: |
            make build
      - persist_to_workspace:
          root: .
          paths:
            - bin
      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR


workflows:
  build_and_test:
    jobs:
      - test:
          filters:
            <<: *FILTERS_CHECK
      - build:
          filters:
            <<: *FILTERS
          requires:
            - test